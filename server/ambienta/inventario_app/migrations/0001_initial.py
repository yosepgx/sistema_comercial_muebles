# Generated by Django 5.1.6 on 2025-03-01 04:33

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Almacen',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre', models.CharField(max_length=255)),
                ('tipo', models.CharField(choices=[('almacen', 'Almac√©n'), ('trastienda', 'Trastienda')], max_length=50)),
                ('activo', models.BooleanField(default=True)),
            ],
        ),
        migrations.CreateModel(
            name='CategoriaProducto',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('descripcion', models.CharField(max_length=255)),
                ('activo', models.BooleanField(default=True)),
            ],
        ),
        migrations.CreateModel(
            name='Producto',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('umedida_sunat', models.CharField(choices=[('4A', 'BOBINAS'), ('BJ', 'BALDE'), ('BLL', 'BARRILES'), ('BG', 'BOLSA'), ('BO', 'BOTELLAS'), ('BX', 'CAJA'), ('CT', 'CARTONES'), ('CMK', 'CENTIMETRO CUADRADO'), ('CMQ', 'CENTIMETRO CUBICO'), ('CMT', 'CENTIMETRO LINEAL'), ('CEN', 'CIENTO DE UNIDADES'), ('CY', 'CILINDRO'), ('CJ', 'CONOS'), ('DZN', 'DOCENA'), ('DZP', 'DOCENA POR 10**6'), ('BE', 'FARDO'), ('GLI', 'GALON INGLES (4,545956L)'), ('GRM', 'GRAMO'), ('GRO', 'GRUESA'), ('HLT', 'HECTOLITRO'), ('LEF', 'HOJA'), ('SET', 'JUEGO'), ('KGM', 'KILOGRAMO'), ('KTM', 'KILOMETRO'), ('KWH', 'KILOVATIO HORA'), ('KT', 'KIT'), ('CA', 'LATAS'), ('LBR', 'LIBRAS'), ('LTR', 'LITRO'), ('MWH', 'MEGAWATT HORA'), ('MTR', 'METRO'), ('MTK', 'METRO CUADRADO'), ('MTQ', 'METRO CUBICO'), ('MGM', 'MILIGRAMOS'), ('MLT', 'MILILITRO'), ('MMT', 'MILIMETRO'), ('MMK', 'MILIMETRO CUADRADO'), ('MMQ', 'MILIMETRO CUBICO'), ('MLL', 'MILLARES'), ('UM', 'MILLON DE UNIDADES'), ('ONZ', 'ONZAS'), ('PF', 'PALETAS'), ('PK', 'PAQUETE'), ('PR', 'PAR'), ('FOT', 'PIES'), ('FTK', 'PIES CUADRADOS'), ('FTQ', 'PIES CUBICOS'), ('C62', 'PIEZAS'), ('PG', 'PLACAS'), ('ST', 'PLIEGO'), ('INH', 'PULGADAS'), ('RM', 'RESMA'), ('DR', 'TAMBOR'), ('STN', 'TONELADA CORTA'), ('LTN', 'TONELADA LARGA'), ('TNE', 'TONELADAS'), ('TU', 'TUBOS'), ('NIU', 'UNIDAD (BIENES)'), ('ZZ', 'UNIDAD (SERVICIOS)'), ('GLL', 'US GALON (3,7843 L)'), ('YRD', 'YARDA'), ('YDK', 'YARDA CUADRADA')], default='NIU', max_length=5)),
                ('nombre', models.CharField(max_length=255)),
                ('descripcion', models.TextField(blank=True, null=True)),
                ('precio', models.DecimalField(decimal_places=2, max_digits=10)),
                ('igv', models.DecimalField(decimal_places=2, default=0.18, max_digits=5)),
                ('afecto_igv', models.BooleanField(default=True)),
                ('codigo_afecion_igv', models.CharField(default='10', max_length=4)),
                ('activo', models.BooleanField(default=True)),
                ('categoria_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='productos_rel', to='inventario_app.categoriaproducto')),
            ],
        ),
        migrations.CreateModel(
            name='Inventario',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cantidad', models.PositiveIntegerField()),
                ('almacen', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='inventario_app.almacen')),
                ('producto', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='inventario_app.producto')),
            ],
            options={
                'unique_together': {('producto', 'almacen')},
            },
        ),
    ]
